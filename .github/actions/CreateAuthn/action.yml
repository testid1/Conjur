name: "Create Conjur JWT Authenticator"
description: "Defines a new JWT authenticator in Conjur via policy"

inputs:
  CONJUR_URL:
    description: "Conjur API base URL (e.g. https://your-conjur.example.com/api)"
    required: true
  
  CONJUR_ACCOUNT:
    description: "Conjur account name"
    required: true

  SERVICE_ID:
    description: "JWT authenticator service ID"
    required: true
    
  JWT_ISSUER:
    description: "Expected `iss` claim in the JWT"
    required: true
  
  JWKS_URI:
    description: "JWKS endpoint URL for your JWT issuer"
    required: true

  JWT_IDENTITY_PATH:
    description: "JSONPath to the identity claim in the JWT (e.g. `$.sub`)"
    required: true

  AUTHENTICATOR_NAME:
    description: "Name for the new JWT authenticator (under conjur/authn-jwt/â€¦)"
    required: true

runs:
  using: "composite"
  steps:
    - name: Authenticate to Conjur via OIDC
      id: auth
      shell: bash
      env:
        CONJUR_URL:        ${{ inputs.CONJUR_URL }}
        CONJUR_ACCOUNT:    ${{ inputs.CONJUR_ACCOUNT }}
        CONJUR_SERVICE_ID: ${{ inputs.SERVICE_ID }}
      run: |
        GIT_JWT=$(curl -s \
          -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "$ACTIONS_ID_TOKEN_REQUEST_URL" \
          | jq -r .value)

        SESSION_TOKEN=$(curl -s -k \
          --request POST \
          "$CONJUR_URL/authn-jwt/$CONJUR_SERVICE_ID/$CONJUR_ACCOUNT/authenticate" \
          --header "Content-Type: application/x-www-form-urlencoded" \
          --data-urlencode "jwt=$GIT_JWT")

        echo "session=$SESSION_TOKEN" >> $GITHUB_OUTPUT

    - name: Build authenticator policy YAML
      shell: bash
      run: |
        cat <<EOF > authenticator-policy.yml
- !policy
  id: conjur/authn-jwt/${{ inputs.AUTHENTICATOR_NAME }}
  body:
    - !webservice
    - !variable jwt-issuer
      value: "${{ inputs.JWT_ISSUER }}"
    - !variable jwks-url
      value: "${{ inputs.JWKS_URI }}"
    - !variable identity-path
      value: "${{ inputs.JWT_IDENTITY_PATH }}"
    - !group authenticatable
    - !permit
      role: !group authenticatable
      privileges: [read, authenticate]
      resource: !webservice
EOF

    - name: Load authenticator into Conjur
      shell: bash
      env:
        CONJUR_URL:     ${{ inputs.CONJUR_URL }}
        SESSION_TOKEN: ${{ steps.auth.outputs.session }}
      run: |
        curl -v \
          -H "Authorization: Token token=\"${SESSION_TOKEN}\"" \
          -X PATCH \
          "$CONJUR_URL/policies/conjur/policy/data/terraform" \
          --data-binary "@authenticator-policy.yml"
