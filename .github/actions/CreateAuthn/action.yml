name: "Create Conjur JWT Authenticator"
description: "Defines a new JWT authenticator in Conjur via policy"

inputs:
  CONJUR_URL:
    description: "Conjur API base URL (e.g. https://your-conjur.example.com/api)"
    required: true
  CONJUR_ACCOUNT:
    description: "Conjur account name"
    required: true
  SERVICE_ID:
    description: "JWT authenticator service ID (e.g. 'github')"
    required: true
  JWT_ISSUER:
    description: "Expected 'iss' claim in the JWT"
    required: true
  JWKS_URI:
    description: "JWKS endpoint URL for your issuer"
    required: true
  JWT_IDENTITY_PATH:
    description: "JSONPath to the identity claim (e.g. '$.sub')"
    required: true
  AUTHENTICATOR_NAME:
    description: "Name for the new authenticator under conjur/authn-jwt/"
    required: true

runs:
  using: "composite"
  steps:
    - name: Authenticate to Conjur via OIDC
      id: auth
      shell: bash
      env:
        CONJUR_URL:        ${{ inputs.CONJUR_URL }}
        CONJUR_ACCOUNT:    ${{ inputs.CONJUR_ACCOUNT }}
        CONJUR_SERVICE_ID: ${{ inputs.SERVICE_ID }}
      run: |
        set -e
        # 1) Mint the GitHub OIDC JWT
        GIT_JWT=$(curl -s \
          -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "$ACTIONS_ID_TOKEN_REQUEST_URL" \
          | jq -r .value)

        # 2) Exchange it for a Conjur session token
        SESSION_TOKEN=$(curl -s -k \
          -X POST "$CONJUR_URL/authn-jwt/$CONJUR_SERVICE_ID/$CONJUR_ACCOUNT/authenticate" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          --data-urlencode "jwt=$GIT_JWT")

        echo "session=$SESSION_TOKEN" >> $GITHUB_OUTPUT\
        echo "SESSION_TOKEN is: '$SESSION_TOKEN'"\

    - name: Build authenticator policy file
      shell: bash
      run: |
        # Overwrite or create the file
        echo "- !policy" > authenticator-policy.yml
        echo "  id: conjur/authn-jwt/${{ inputs.AUTHENTICATOR_NAME }}" >> authenticator-policy.yml
        echo "  body:" >> authenticator-policy.yml
        echo "    - !webservice" >> authenticator-policy.yml
        echo "    - !variable jwt-issuer" >> authenticator-policy.yml
        echo "      value: \"${{ inputs.JWT_ISSUER }}\"" >> authenticator-policy.yml
        echo "    - !variable jwks-url" >> authenticator-policy.yml
        echo "      value: \"${{ inputs.JWKS_URI }}\"" >> authenticator-policy.yml
        echo "    - !variable identity-path" >> authenticator-policy.yml
        echo "      value: \"${{ inputs.JWT_IDENTITY_PATH }}\"" >> authenticator-policy.yml
        echo "    - !group authenticatable" >> authenticator-policy.yml
        echo "    - !permit" >> authenticator-policy.yml
        echo "      role: !group authenticatable" >> authenticator-policy.yml
        echo "      privileges: [read, authenticate]" >> authenticator-policy.yml
        echo "      resource: !webservice" >> authenticator-policy.yml

    - name: Load policy into Conjur
      shell: bash
      env:
        CONJUR_URL:     ${{ inputs.CONJUR_URL }}
        SESSION_TOKEN: ${{ steps.auth.outputs.session }}
      run: |
        curl -v \
          -H "Authorization: Token token=\"$SESSION_TOKEN\"" \
          -X PATCH \
          "$CONJUR_URL/policies/conjur/policy/data/terraform" \
          --data-binary "@authenticator-policy.yml"
