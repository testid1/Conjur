# .github/workflows/conjur-jwt-auth.yml
name: Conjur JWT Auth

on:
  workflow_dispatch:

jobs:
  conjur-auth:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Authenticate to Conjur via GitHub OIDC
        id: conjur_auth
        shell: bash
        run: |
          set -euo pipefail

          # ---- Conjur/GitHub OIDC config (hardcoded) ----
          CONJUR_BASE_URL="https://pwclab.secretsmgr.cyberark.cloud"   # no /api
          CONJUR_ACCOUNT="conjur"
          SERVICE_ID="Github_auth"                                      # use GitMain2 if that's your target
          OIDC_AUDIENCE="conjur-demo"                                   # matches your screenshot
          AUTH_URL="${CONJUR_BASE_URL}/authn-jwt/${SERVICE_ID}/${CONJUR_ACCOUNT}/authenticate"
          # ------------------------------------------------

          echo "Requesting GitHub OIDC JWT (audience=${OIDC_AUDIENCE})"
          REQ_URL="${ACTIONS_ID_TOKEN_REQUEST_URL}?audience=${OIDC_AUDIENCE}"
          GIT_JWT=$(curl -sS -H "Authorization: bearer ${ACTIONS_ID_TOKEN_REQUEST_TOKEN}" \
                    "${REQ_URL}" | jq -r .value)

          if [ -z "${GIT_JWT}" ] || [ "${GIT_JWT}" = "null" ]; then
            echo "Failed to obtain GitHub OIDC token. Ensure 'permissions: id-token: write' is set."
            exit 1
          fi

          echo "GitHub JWT length: ${#GIT_JWT}"
          printf "%s" "${GIT_JWT}" > id_token.txt

          echo "Authenticating to Conjur at: ${AUTH_URL}"
          SESSION_TOKEN=$(curl -sS \
            --request POST "${AUTH_URL}" \
            --header "Content-Type: application/x-www-form-urlencoded" \
            --header "Accept-Encoding: base64" \
            --data-urlencode "jwt=${GIT_JWT}")

          if [ -z "${SESSION_TOKEN}" ]; then
            echo "Failed to obtain Conjur session token. Check authenticator config and audience."
            exit 1
          fi

          echo "Conjur session token length: ${#SESSION_TOKEN}"
          printf "%s" "${SESSION_TOKEN}" > session_token.txt

          # Correct outputs (use the right variable names)
          echo "jwt=${GIT_JWT}" >> "$GITHUB_OUTPUT"
          echo "session=${SESSION_TOKEN}" >> "$GITHUB_OUTPUT"

      - name: Upload raw jwt
        uses: actions/upload-artifact@v4
        with:
          name: raw-jwt
          path: id_token.txt

      - name: Upload raw session token
        uses: actions/upload-artifact@v4
        with:
          name: raw-session
          path: session_token.txt

      - name: Show whoami (optional)
        shell: bash
        run: |
          set -euo pipefail
          SESSION_TOKEN_B64=$(cat session_token.txt)
          USER=$(printf "%s" "${SESSION_TOKEN_B64}" | base64 --decode 2>/dev/null | jq -r .user_id || true)
          echo "Authenticated as: ${USER:-unknown}"
